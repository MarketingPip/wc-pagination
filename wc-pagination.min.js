!function(){"use strict";class t extends HTMLElement{static get observedAttributes(){return["total","pageSize","current"]}constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}get css(){return'\n      <style>\n        :host {\n          display: inline-block;\n        }\n        ol {\n          display: flex;\n          align-items: center;\n          margin: 0;\n          padding: 0;\n          list-style-type: none;\n          width: 100%;\n          text-align: right;\n        }\n        ol li {\n          display: inline-block;\n          cursor: pointer;\n        }\n        ol li.disabled {\n          cursor: not-allowed;\n        }\n        ol li .content {\n          text-decoration: none;\n          font-weight: bold;\n          background-color: #fff;\n          color: #7f8c8d;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          width: 40px;\n          height: 40px;\n          margin: 0 3px;\n          border: 1px solid #e5e5e5;\n          user-select: none;\n        }\n        ol li:first-child .content{\n          margin-left: 0;        \n        }\n        ol li:last-child .content{\n          margin-right: 0;        \n        }\n        ol li[aria-current="true"] .content {\n          border-color: #2c3e50;\n          background-color: #2c3e50;\n          color: #fff;\n          text-decoration: none;\n        }\n      </style>\n    '}get html(){return`\n      <ol aria-label="Pagination Navigation">\n        <li onClick="this.getRootNode().host.current = 1"\n            aria-label="Go to the first page"\n            ${1===this.current?'\n              class="disabled"\n              disabled\n            ':""}>\n          <div class="content">←</div>\n        </li>\n        ${this.totalPages>3&&this.current-2>=1?'\n          <li onClick="this.getRootNode().host.current  = this.getRootNode().host.current - 3 < 1 ? 1 : this.getRootNode().host.current - 3"\n              aria-label="Jump three pages backward"\n              title="Jump three pages backward">\n            <div class="content">…</div\n          </li>\n        ':""}\n        ${this.generatePages().map((t=>`\n          <li onClick="this.getRootNode().host.current = ${t}"\n              aria-label="${t===this.current?"Current page":"Go to page "+t}"\n              ${t===this.current?'aria-current="true"':""}>  \n            <div class="content">${t}</div>\n          </li>\n        `)).join("")}\n        ${this.totalPages>3&&this.current+2<=this.totalPages?'\n          <li onClick="this.getRootNode().host.current = this.getRootNode().host.current + 3 <= this.getRootNode().host.totalPages ? this.getRootNode().host.current + 3 : this.getRootNode().host.totalPages"\n              aria-label="Jump three pages forward"\n              title="Jump three pages forward">\n            <div class="content">…</div\n          </li>\n        ':""}\n        <li onClick="this.getRootNode().host.current = this.getRootNode().host.totalPages"\n            aria-label="Go to the last page"\n            ${this.current===this.totalPages?'\n              class="disabled"\n              disabled\n            ':""}>\n          <div class="content">→</div>\n        </li>\n      </ol>\n    `}generatePages(){const t=[];if(1===this.current)for(let e=1,n=0;e<=this.totalPages&&n<3;e++,n++)t.push(e);else if(this.current===this.totalPages){for(let e=this.totalPages,n=0;e>=1&&n<3;e--,n++)t.push(e);t.reverse()}else t.push(this.current),this.current<this.totalPages&&t.push(this.current+1),this.current>=1&&t.unshift(this.current-1);return t}render(){this.totalPages=Math.ceil(this.total/this.pageSize),this.shadow.innerHTML=`${this.css}${this.html}`}connectedCallback(){this.render()}attributeChangedCallback(t,e,n){("value"===t||e!==n)&&this.render()}get total(){return Number(this.getAttribute("total"))}get current(){return Number(this.getAttribute("current"))||1}set current(t){this.setAttribute("current",t.toString())}get pageSize(){return Number(this.getAttribute("page-size"))||10}}window.customElements.define("wc-pagination",t)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
